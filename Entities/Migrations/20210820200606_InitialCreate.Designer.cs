// <auto-generated />
using System;
using Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(GestionCommercialContext))]
    [Migration("20210820200606_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Categorie", b =>
                {
                    b.Property<Guid>("CategorieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CategorieId");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Entities.Models.Gamme", b =>
                {
                    b.Property<Guid>("GammeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategorieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("MarqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrixUnité")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Prix_Unité");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StyleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GammeId");

                    b.HasIndex(new[] { "CategorieId" }, "IX_Gamme_CategorieId");

                    b.HasIndex(new[] { "MarqueId" }, "IX_Gamme_MarqueId");

                    b.HasIndex(new[] { "StyleId" }, "IX_Gamme_StyleId");

                    b.ToTable("Gamme");
                });

            modelBuilder.Entity("Entities.Models.Marque", b =>
                {
                    b.Property<Guid>("MarqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MarqueId");

                    b.ToTable("Marque");
                });

            modelBuilder.Entity("Entities.Models.Model", b =>
                {
                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatégorieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ModelId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("Entities.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("RefreshTokenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AuteurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("('0001-01-01T00:00:00.0000000')");

                    b.Property<DateTime>("DateOfExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Refreshable")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RefreshTokenId");

                    b.HasIndex(new[] { "AuteurId" }, "IX_RefreshToken_AuteurId");

                    b.HasIndex(new[] { "UserId" }, "IX_RefreshToken_UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Reference")
                        .HasColumnType("int");

                    b.Property<string>("AdresseLivraison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Adresse_Livraison");

                    b.Property<string>("Attribué")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuteurAnnulation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Auteur_Annulation");

                    b.Property<string>("AuteurModif")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Auteur_Modif");

                    b.Property<string>("AuteurReception")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Auteur_Reception");

                    b.Property<string>("AuteurSortie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Auteur_Sortie");

                    b.Property<string>("AutreNumPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Autre_Num_Payement");

                    b.Property<string>("Client")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("ContactLivraison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Livraison");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateAction")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Action");

                    b.Property<DateTime?>("DateAnnultation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Annultation");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<DateTime?>("DateModification")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Modification");

                    b.Property<DateTime?>("DatePayement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Payement");

                    b.Property<DateTime?>("DateProduction")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Production");

                    b.Property<DateTime?>("DateSortie")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Sortie");

                    b.Property<string>("DeptAuteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Dept_Auteur");

                    b.Property<string>("DescripInfo")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("Descrip_Info");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Detachement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Disponible")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EchecLivr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Echec_Livr");

                    b.Property<string>("FormeGateau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Forme_Gateau");

                    b.Property<string>("Garnissage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GateauPour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Gateau_Pour");

                    b.Property<string>("GenreClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Genre_Client");

                    b.Property<string>("HeureLivraison")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Heure_Livraison");

                    b.Property<string>("IdClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Client");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Livraison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Livreur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MentionSurGateau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Mention_sur_gateau");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,1)");

                    b.Property<decimal?>("Nombre")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Num2Client")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num2_Client");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumCmd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Cmd");

                    b.Property<decimal?>("Part")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Payement")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Payée")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("RefPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Payement");

                    b.Property<string>("RefSarali")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Sarali");

                    b.Property<string>("ReservBoutique")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Reserv_Boutique");

                    b.Property<decimal?>("Reste")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Retour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReçuLogistique")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Reçu_Logistique");

                    b.Property<string>("SituationPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Situation_Payement");

                    b.Property<decimal?>("SommePayée")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Somme_Payée");

                    b.Property<string>("SortieCuisine")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Sortie_Cuisine");

                    b.Property<string>("TempLivraison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Temp_Livraison");

                    b.Property<int?>("TransId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ValidationPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Validation_Payement");

                    b.HasKey("Reference");

                    b.HasIndex(new[] { "UserId" }, "IX_Reservation_UserId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Entities.Models.StkTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdProduit")
                        .HasColumnType("int")
                        .HasColumnName("Id_Produit");

                    b.Property<string>("Ingredient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Unité")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("stk_temp");
                });

            modelBuilder.Entity("Entities.Models.Style", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Style");
                });

            modelBuilder.Entity("Entities.Models.Sysdiagram", b =>
                {
                    b.Property<byte[]>("Definition")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("definition");

                    b.Property<int>("DiagramId")
                        .HasColumnType("int")
                        .HasColumnName("diagram_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("principal_id");

                    b.Property<int?>("Version")
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.ToTable("sysdiagrams");
                });

            modelBuilder.Entity("Entities.Models.Taille", b =>
                {
                    b.Property<Guid>("TailleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("ServerTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TailleId");

                    b.ToTable("Taille");
                });

            modelBuilder.Entity("Entities.Models.TblAccessoire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_accessoire");
                });

            modelBuilder.Entity("Entities.Models.TblAchat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("Crédit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Débit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumFacture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Facture");

                    b.Property<decimal?>("Qreel")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("RefPièces")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Pièces");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_achat");
                });

            modelBuilder.Entity("Entities.Models.TblArrivée", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("DateArrivée")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Arrivée");

                    b.Property<string>("Détachement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumAchat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Achat");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_arrivée");
                });

            modelBuilder.Entity("Entities.Models.TblArrivéePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAction")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Action");

                    b.Property<DateTime?>("DateArrivée")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Arrivée");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdFournisseur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Fournisseur");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumAchat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Achat");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("QUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Unité");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_arrivée_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblArrivéeTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("DateArrivée")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Arrivée");

                    b.Property<string>("Détachement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_arrivée_temp");
                });

            modelBuilder.Entity("Entities.Models.TblArrivéeTempPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateArrivée")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Arrivée");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdFournisseur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Fournisseur");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_arrivée_temp_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblAvariePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<string>("NumTransfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Transfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Validé")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_avarie_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblAvariePartenaireTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<string>("NumTransfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Transfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_avarie_partenaire_temp");
                });

            modelBuilder.Entity("Entities.Models.TblBon", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.HasKey("Id");

                    b.ToTable("tbl_bon");
                });

            modelBuilder.Entity("Entities.Models.TblBonPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.HasKey("Id");

                    b.ToTable("tbl_bon_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblCatégorie", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.HasKey("Id");

                    b.ToTable("tbl_catégorie");
                });

            modelBuilder.Entity("Entities.Models.TblCatégorieGadget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.HasKey("Id");

                    b.ToTable("tbl_catégorie_gadget");
                });

            modelBuilder.Entity("Entities.Models.TblCatégoriePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_catégorie_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblClient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_client");
                });

            modelBuilder.Entity("Entities.Models.TblClient1", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DateAjout")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MotPasse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mot_Passe");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telephone2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_clients");
                });

            modelBuilder.Entity("Entities.Models.TblClientPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_client_partenaires");
                });

            modelBuilder.Entity("Entities.Models.TblCommande", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_commande");
                });

            modelBuilder.Entity("Entities.Models.TblCommandePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Annulée")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContactClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Client");

                    b.Property<string>("ContactLivraison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Livraison");

                    b.Property<string>("ContactLivreur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Livreur");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateAction")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Action");

                    b.Property<DateTime?>("DateAnnulation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Annulation");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<DateTime?>("DateModification")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Modification");

                    b.Property<DateTime?>("DatePayement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Payement");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Heure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdAuteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Auteur");

                    b.Property<string>("IdEntité")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Id_Entité");

                    b.Property<string>("Livreur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Livrée")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mention")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NumVente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Vente");

                    b.Property<string>("Payée")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ReferencePayement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Reference_Payement");

                    b.HasKey("Id");

                    b.ToTable("tbl_commande_partenaires");
                });

            modelBuilder.Entity("Entities.Models.TblCommandeTempPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContactClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Client");

                    b.Property<string>("ContactLivraison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Livraison");

                    b.Property<string>("ContactLivreur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Livreur");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Heure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdAuteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Auteur");

                    b.Property<string>("IdEntité")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Id_Entité");

                    b.Property<string>("Livreur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Mention")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_commande_temp_partenaires");
                });

            modelBuilder.Entity("Entities.Models.TblCompteComptable", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Compte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompteAux")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Compte_Aux");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomCompte")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nom_Compte");

                    b.Property<string>("Préfix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_compte_comptable");
                });

            modelBuilder.Entity("Entities.Models.TblDepense", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Depenses")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InfoCompte")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Info_Compte");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_depenses");
                });

            modelBuilder.Entity("Entities.Models.TblDetachement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Siège")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_detachement");
                });

            modelBuilder.Entity("Entities.Models.TblElement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Valeur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_elements");
                });

            modelBuilder.Entity("Entities.Models.TblEntité", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_entité");
                });

            modelBuilder.Entity("Entities.Models.TblEntreprise", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Couleur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Pays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Secteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Slogan")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TypeProduit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Type_Produit");

                    b.Property<string>("Téléphone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ville")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_entreprise");
                });

            modelBuilder.Entity("Entities.Models.TblFichierGestion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Fichier")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomFichier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nom_Fichier");

                    b.Property<string>("NumOpération")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Opération");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_fichier_gestion");
                });

            modelBuilder.Entity("Entities.Models.TblFileLocation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_FileLocation");
                });

            modelBuilder.Entity("Entities.Models.TblFilialePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Siège")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_filiale_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblFormuleMesureVente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Formule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Grand")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("HyperLarge")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Hyper Large");

                    b.Property<decimal?>("Large")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Moyen")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Petit")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_formule_mesure_vente");
                });

            modelBuilder.Entity("Entities.Models.TblFormuleMesureVentePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Formule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Grand")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("HyperLarge")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Hyper Large");

                    b.Property<decimal?>("Large")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Moyen")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Petit")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_formule_mesure_vente_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblFournisseur", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tbl_fournisseurs");
                });

            modelBuilder.Entity("Entities.Models.TblGadget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<int?>("Formule")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Marque")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomFichier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nom_Fichier");

                    b.Property<decimal?>("PrixGrand")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Grand");

                    b.Property<decimal?>("PrixHyperLarge")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Hyper_Large");

                    b.Property<decimal?>("PrixLarge")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Large");

                    b.Property<decimal?>("PrixMoyen")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Moyen");

                    b.Property<decimal?>("PrixPetit")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Petit");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<decimal?>("StockMax")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_max");

                    b.Property<decimal?>("StockMin")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_min");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_gadget");
                });

            modelBuilder.Entity("Entities.Models.TblGarnissage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("Prix_Unité");

                    b.HasKey("Id");

                    b.ToTable("tbl_garnissage");
                });

            modelBuilder.Entity("Entities.Models.TblGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AuteurReception")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Auteur_Reception");

                    b.Property<string>("AuteurSortie")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Auteur_Sortie");

                    b.Property<decimal?>("AutreForme")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Autre_Forme");

                    b.Property<decimal?>("Buste")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Coeur")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateReception")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Reception");

                    b.Property<string>("Gateau")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Heure")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("QAutre")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Autre");

                    b.Property<decimal?>("QBuste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Buste");

                    b.Property<decimal?>("QCoeur")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Coeur");

                    b.Property<decimal?>("QRectangle")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Rectangle");

                    b.Property<decimal?>("QReçu")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Reçu");

                    b.Property<decimal?>("QRond")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Rond");

                    b.Property<decimal?>("QRondHaut")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_RondHaut");

                    b.Property<decimal?>("QUtilisé")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Utilisé");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Rectangle")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Rond")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("RondHaut")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Rond_Haut");

                    b.Property<decimal?>("UAutreForme")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("U_AutreForme");

                    b.Property<decimal?>("UBuste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("U_Buste");

                    b.Property<decimal?>("UCoeur")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("U_Coeur");

                    b.Property<decimal?>("URectangle")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("U_Rectangle");

                    b.Property<decimal?>("URond")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("U_Rond");

                    b.Property<decimal?>("URondHaut")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("U_RondHaut");

                    b.HasKey("Id");

                    b.ToTable("tbl_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblGateauBase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AuteurValidation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Auteur_Validation");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Detachement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<int?>("Heure")
                        .HasColumnType("int");

                    b.Property<decimal?>("NbLancé")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Lancé");

                    b.Property<int?>("NbPart")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Part");

                    b.Property<int?>("Nombre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_gateau_base");
                });

            modelBuilder.Entity("Entities.Models.TblGateauBaseTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AuteurValidation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Auteur_Validation");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Validation");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Qreel")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("QReel");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_gateau_base_temp");
                });

            modelBuilder.Entity("Entities.Models.TblGateauClient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<int?>("NbAvis")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Avis");

                    b.Property<int?>("NbCmd")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Cmd");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.HasKey("Id");

                    b.ToTable("tbl_gateau_client");
                });

            modelBuilder.Entity("Entities.Models.TblGateauFiniTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AuteurValidation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Auteur_Validation");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Validation");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Qreel")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("QReel");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_gateau_fini_temp");
                });

            modelBuilder.Entity("Entities.Models.TblGrosGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("AuteurId")
                        .HasColumnType("int");

                    b.Property<string>("Categorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filename")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AuteurId" }, "IX_tbl_gros_gateau_AuteurId");

                    b.HasIndex(new[] { "AuteurId" }, "IX_tbl_livraison_AuteurId");

                    b.ToTable("tbl_gros_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblIntitulé", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Intitulé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_intitulé");
                });

            modelBuilder.Entity("Entities.Models.TblInventaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("StockMax")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_max");

                    b.Property<decimal?>("StockMin")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_min");

                    b.HasKey("Id");

                    b.ToTable("tbl_inventaire");
                });

            modelBuilder.Entity("Entities.Models.TblJournalComptable", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Cloturé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Compte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompteTier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Compte_Tier");

                    b.Property<decimal?>("Crédit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateEnregistrement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Enregistrement");

                    b.Property<decimal?>("Débit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<byte[]>("Fichier")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NFacture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("N_Facture");

                    b.Property<string>("NomFichier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nom_Fichier");

                    b.Property<string>("RefPayement")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Ref_Payement");

                    b.Property<string>("RefPièces")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Pièces");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Validé")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_journal_comptable");
                });

            modelBuilder.Entity("Entities.Models.TblJournalComptableTest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Compte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompteTier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Compte_Tier");

                    b.Property<decimal?>("Crédit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateEnregistrement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Enregistrement");

                    b.Property<decimal?>("Débit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<byte[]>("Fichier")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NFacture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("N_Facture");

                    b.Property<string>("NomFichier")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nom_Fichier");

                    b.Property<string>("RefPayement")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Ref_Payement");

                    b.Property<string>("RefPièces")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Pièces");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Validé")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_journal_comptable_test");
                });

            modelBuilder.Entity("Entities.Models.TblLikesGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("Id_Client");

                    b.Property<int?>("IdProduit")
                        .HasColumnType("int")
                        .HasColumnName("Id_Produit");

                    b.HasKey("Id");

                    b.ToTable("tbl_likes_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblListFournisseur", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pays")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TailleImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Taille_Image");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ville")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_list_fournisseur");
                });

            modelBuilder.Entity("Entities.Models.TblListGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("AutreForme")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Buste")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Coeur")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<decimal?>("NbPart")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Rectangle")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Rond")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("RondHaut")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("StockMax")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_max");

                    b.Property<decimal?>("StockMin")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_min");

                    b.HasKey("Id");

                    b.ToTable("tbl_list_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblListJournaux", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Compte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nom")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_list_journaux");
                });

            modelBuilder.Entity("Entities.Models.TblListProduit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("AutreForme")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Buste")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<decimal?>("Coeur")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<decimal?>("NbPart")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Rectangle")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Rond")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("RondHaut")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("StockMax")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_max");

                    b.Property<decimal?>("StockMin")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_min");

                    b.HasKey("Id");

                    b.ToTable("tbl_list_produit");
                });

            modelBuilder.Entity("Entities.Models.TblListValidationStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_User");

                    b.HasKey("Id");

                    b.ToTable("tbl_list_validation_stock");
                });

            modelBuilder.Entity("Entities.Models.TblLivraison", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AdresseLivraison")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Adresse_Livraison");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AuteurId")
                        .HasColumnType("int");

                    b.Property<string>("ContactClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contact_Client");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<string>("Gateau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Livreur")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("NomClient")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Nom_Client");

                    b.Property<int?>("Reference")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuteurId")
                        .HasDatabaseName("IX_tbl_livraison_AuteurId1");

                    b.ToTable("tbl_livraison");
                });

            modelBuilder.Entity("Entities.Models.TblLivraisonPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AdresseLivraison")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Adresse_Livraison");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contact_Client");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Livreur")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("NomClient")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Nom_Client");

                    b.Property<int?>("Reference")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_livraison_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblLivraisonPartenaireExpress", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AdresseLivraison")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Adresse_Livraison");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contact_Client");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<string>("Entité")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Livreur")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("NomClient")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Nom_Client");

                    b.Property<int?>("Reference")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_livraison_partenaire_express");
                });

            modelBuilder.Entity("Entities.Models.TblLivreur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_livreur");
                });

            modelBuilder.Entity("Entities.Models.TblLivreurPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_livreur_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblMarque", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Marque")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_marque");
                });

            modelBuilder.Entity("Entities.Models.TblMarquePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marque")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_marque_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblMelange", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Model")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.HasKey("Id");

                    b.ToTable("tbl_melange");
                });

            modelBuilder.Entity("Entities.Models.TblMesureVente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Default")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_mesure_vente");
                });

            modelBuilder.Entity("Entities.Models.TblMesureVentePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Default")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_mesure_vente_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblModePayementPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Defaut")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Simpa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_mode_payement_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Model")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("Prix_Unité");

                    b.HasKey("Id");

                    b.ToTable("tbl_model");
                });

            modelBuilder.Entity("Entities.Models.TblNumAchat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("NumAchat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Achat");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_achat");
                });

            modelBuilder.Entity("Entities.Models.TblNumAchatPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("NumAchat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Achat");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_achat_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblNumAvariePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_avarie_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblNumCmd", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_cmd");
                });

            modelBuilder.Entity("Entities.Models.TblNumCmdPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_cmd_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblNumPayementPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_payement_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblNumTransfère", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_transfère");
                });

            modelBuilder.Entity("Entities.Models.TblNumTransfèrePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_transfère_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblNumVente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_vente");
                });

            modelBuilder.Entity("Entities.Models.TblNumVentePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_vente_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblNumVentePartenairesExpress", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Order")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_num_vente_partenaires_express");
                });

            modelBuilder.Entity("Entities.Models.TblOperationDefaultPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Default")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_operation_default_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contact1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contact2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<string>("NomSocial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nom Social");

                    b.Property<string>("Pays")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Ville")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblPartenairesFiliale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NbPart")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_partenaires_filiale");
                });

            modelBuilder.Entity("Entities.Models.TblPayement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Client")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Contact_Client");

                    b.Property<DateTime?>("DatePayement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Payement");

                    b.Property<string>("IdTier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Tier");

                    b.Property<string>("ModePayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Mode_Payement");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("NbGateau")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Gateau");

                    b.Property<string>("NumCmd")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Num_Cmd");

                    b.Property<string>("Raison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RefGateau")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Ref_Gateau");

                    b.Property<string>("RefPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Payement");

                    b.Property<string>("RefSarali")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Sarali");

                    b.Property<decimal?>("Réduction")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_payement");
                });

            modelBuilder.Entity("Entities.Models.TblPayementPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CompteTier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Compte Tier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateEcheance")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Echeance");

                    b.Property<DateTime?>("DatePayement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Payement");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Matricule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModePayement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mode_Payement");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Nature")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumOpération")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Opération");

                    b.Property<string>("Raison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Réduction")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_payement_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblPetitGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_petit_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblPlaningGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Annulée")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Assignation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuteurAnnulation")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Auteur_Annulation");

                    b.Property<string>("AuteurReception")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Auteur_Reception");

                    b.Property<string>("AuteurRequette")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Auteur_Requette");

                    b.Property<string>("AuteurSortie")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Auteur_Sortie");

                    b.Property<decimal?>("BusqueFini")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Busque_Fini");

                    b.Property<decimal?>("CoeurFini")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Coeur_Fini");

                    b.Property<DateTime?>("DateExRequette")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_ExRequette");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<DateTime?>("DateReception")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Reception");

                    b.Property<DateTime?>("DateRequette")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Requette");

                    b.Property<DateTime?>("DateSortie")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Sortie");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("GammeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Gateau")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Heure")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("NbCompter")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Compter");

                    b.Property<decimal?>("NbFinition")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Finition");

                    b.Property<decimal?>("NbPart")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("NbRecueilli")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Recueilli");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ReceptionConfirmé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Reception_Confirmé");

                    b.Property<decimal?>("RectangleFini")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Rectangle_Fini");

                    b.Property<decimal?>("RhautFini")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("RHaut_Fini");

                    b.Property<decimal?>("RondFini")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Rond_Fini");

                    b.Property<Guid?>("TailleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("UseFinition")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Use_Finition");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GammeId" }, "IX_tbl_planing_gateau_GammeId");

                    b.HasIndex(new[] { "ModelId" }, "IX_tbl_planing_gateau_ModelId");

                    b.HasIndex(new[] { "TailleId" }, "IX_tbl_planing_gateau_TailleId");

                    b.ToTable("tbl_planing_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblPreparé", b =>
                {
                    b.Property<int>("Ref")
                        .HasColumnType("int");

                    b.Property<string>("AuteurEnregistrement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Auteur_Enregistrement");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateSortie")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Sortie");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Mention")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ref");

                    b.ToTable("tbl_preparé");
                });

            modelBuilder.Entity("Entities.Models.TblProduit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ref")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("StockMax")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_max");

                    b.Property<decimal?>("StockMin")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Stock_min");

                    b.Property<string>("Unité")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_produits");
                });

            modelBuilder.Entity("Entities.Models.TblProduitsPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("DeptAuteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_Auteur");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FormuleStockage")
                        .HasColumnType("int")
                        .HasColumnName("Formule_Stockage");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nom_Image");

                    b.Property<decimal?>("PrixAchat")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Achat");

                    b.Property<decimal?>("PrixGrand")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Grand");

                    b.Property<decimal?>("PrixGrandGrossiste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Grand_Grossiste");

                    b.Property<decimal?>("PrixHyperLarge")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Hyper_Large");

                    b.Property<decimal?>("PrixHyperLargeGrossiste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Hyper_Large_Grossiste");

                    b.Property<decimal?>("PrixLarge")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Large");

                    b.Property<decimal?>("PrixLargeGrossiste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Large_Grossiste");

                    b.Property<decimal?>("PrixMoyen")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Moyen");

                    b.Property<decimal?>("PrixMoyenGrossiste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Moyen_Grossiste");

                    b.Property<decimal?>("PrixPetit")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Petit");

                    b.Property<decimal?>("PrixPetitGrossiste")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Petit_Grossiste");

                    b.Property<int?>("StockMax")
                        .HasColumnType("int")
                        .HasColumnName("Stock_max");

                    b.Property<int?>("StockMin")
                        .HasColumnType("int")
                        .HasColumnName("Stock_min");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_produits_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblProtuitAgro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_protuit_agro");
                });

            modelBuilder.Entity("Entities.Models.TblRedévancePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Redéveur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Rédevant")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_redévance_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblRegistreGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodeBarre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.HasKey("Id");

                    b.ToTable("tbl_registre_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblRemise", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Client")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumCmd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Cmd");

                    b.HasKey("Id");

                    b.ToTable("tbl_remise");
                });

            modelBuilder.Entity("Entities.Models.TblRepartition", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<string>("NumTransfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Transfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Validée")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_repartitions");
                });

            modelBuilder.Entity("Entities.Models.TblRepartitionGadget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marque")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumTranfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Tranfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_repartition_gadget");
                });

            modelBuilder.Entity("Entities.Models.TblRepartitionGadgetTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marque")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_repartition_gadget_temp");
                });

            modelBuilder.Entity("Entities.Models.TblRepartitionPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<string>("NumTransfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Transfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_repartition_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblRepartitionPartenaireTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<string>("NumTransfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Transfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_repartition_partenaire_temp");
                });

            modelBuilder.Entity("Entities.Models.TblRepartitionsTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<string>("NumTransfère")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Transfère");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Source")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tbl_repartitions_temp");
                });

            modelBuilder.Entity("Entities.Models.TblRequetteGateauBase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuteurRequette")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Auteur_Requette");

                    b.Property<string>("AuteurValidation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Auteur_Validation");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Validation");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("QUtilisé")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Utilisé");

                    b.Property<decimal?>("Qreel")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_requette_gateau_base");
                });

            modelBuilder.Entity("Entities.Models.TblRequetteIngredient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuteurValidation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auteur_Validation");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateValidation")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Validation");

                    b.Property<string>("Ingredient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Qreel")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("QReel");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_requette_ingredient");
                });

            modelBuilder.Entity("Entities.Models.TblReservationPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Commande")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<string>("Disponible")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("Id_Client");

                    b.Property<int?>("IdLivreur")
                        .HasColumnType("int")
                        .HasColumnName("Id_Livreur");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Livreur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Livré")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mention")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumLivraison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Livraison");

                    b.Property<string>("NumOperation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Operation");

                    b.Property<string>("Partenaire")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Payée")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Situation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TailleImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Taille_Image");

                    b.Property<decimal?>("TarifLivraison")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Tarif Livraison");

                    b.Property<string>("TypeProduit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type_Produit");

                    b.HasKey("Id");

                    b.ToTable("tbl_reservation_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblReservationPartenaireTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Commande")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<string>("Disponible")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("Id_Client");

                    b.Property<int?>("IdLivreur")
                        .HasColumnType("int")
                        .HasColumnName("Id_Livreur");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Livreur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Livré")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mention")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumLivraison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Livraison");

                    b.Property<string>("NumOperation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Operation");

                    b.Property<string>("Partenaire")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Payée")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TailleImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Taille_Image");

                    b.Property<decimal?>("TarifLivraison")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Tarif Livraison");

                    b.Property<string>("TypeProduit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type_Produit");

                    b.HasKey("Id");

                    b.ToTable("tbl_reservation_partenaire_temp");
                });

            modelBuilder.Entity("Entities.Models.TblResteIngredient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Fichier")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Ingredient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomFichier")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Nom_Fichier");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_reste_ingredient");
                });

            modelBuilder.Entity("Entities.Models.TblRetourClient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AuteurRetour")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Auteur_Retour");

                    b.Property<string>("Client")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Livraison")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("NbCmd")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Cmd");

                    b.Property<int?>("Note")
                        .HasColumnType("int");

                    b.Property<string>("NumCmd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Cmd");

                    b.Property<string>("Produit")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Reception")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Suggestion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_retour_client");
                });

            modelBuilder.Entity("Entities.Models.TblStockFiniRavitaillement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AuteurValidation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Auteur_Validation");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Detachement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NbLancé")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Nb_Lancé");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_stock_fini_ravitaillement");
                });

            modelBuilder.Entity("Entities.Models.TblStockGadget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Détachement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Formule")
                        .HasColumnType("int");

                    b.Property<string>("Marque")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_stock_gadget");
                });

            modelBuilder.Entity("Entities.Models.TblStockGateau", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CodeBarre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Detachement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_stock_gateau");
                });

            modelBuilder.Entity("Entities.Models.TblStockGateauBase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Detachement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Forme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NbPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nb_Part");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("tbl_stock_gateau_base");
                });

            modelBuilder.Entity("Entities.Models.TblStockPartenairesFiliale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code_Barre");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Formule")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_stock_partenaires_filiale");
                });

            modelBuilder.Entity("Entities.Models.TblSynchro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Finition")
                        .HasColumnType("int");

                    b.Property<int?>("GateauBase")
                        .HasColumnType("int")
                        .HasColumnName("Gateau_Base");

                    b.Property<int?>("Logistique")
                        .HasColumnType("int");

                    b.Property<int?>("Programme")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_synchro");
                });

            modelBuilder.Entity("Entities.Models.TblSynchroDate", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Production")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_synchro_date");
                });

            modelBuilder.Entity("Entities.Models.TblSynchroStat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("StatsAchat")
                        .HasColumnType("int")
                        .HasColumnName("Stats_Achat");

                    b.Property<int?>("StatsStock")
                        .HasColumnType("int")
                        .HasColumnName("Stats_Stock");

                    b.Property<int?>("StatsVente")
                        .HasColumnType("int")
                        .HasColumnName("Stats_Vente");

                    b.HasKey("Id");

                    b.ToTable("tbl_synchro_stats");
                });

            modelBuilder.Entity("Entities.Models.TblTaille", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_taille");
                });

            modelBuilder.Entity("Entities.Models.TblTaillePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_taille_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblTempAchat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<string>("CompteC")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Compte_C");

                    b.Property<string>("CompteD")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Compte_D");

                    b.Property<string>("Crédit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Débit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumFacture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Facture");

                    b.Property<decimal?>("Qreel")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("RefPièces")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Pièces");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_temp_achat");
                });

            modelBuilder.Entity("Entities.Models.TblTempCommande", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BonCommande")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bon_Commande");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Fournisseur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_temp_commande");
                });

            modelBuilder.Entity("Entities.Models.TblTempReserv", b =>
                {
                    b.Property<int>("ReserId")
                        .HasColumnType("int");

                    b.Property<int?>("AuteurId")
                        .HasColumnType("int");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,1)");

                    b.Property<decimal?>("Part")
                        .HasColumnType("decimal(18,1)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,1)");

                    b.HasKey("ReserId");

                    b.HasIndex(new[] { "AuteurId" }, "IX_tbl_tempReserv_AuteurId");

                    b.ToTable("tbl_tempReserv");
                });

            modelBuilder.Entity("Entities.Models.TblTempUsage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EffectuéePar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Effectuée_Par");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unité")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_temp_usage");
                });

            modelBuilder.Entity("Entities.Models.TblTran", b =>
                {
                    b.Property<int>("TransId")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("NbReserv")
                        .HasColumnType("int")
                        .HasColumnName("Nb_Reserv");

                    b.Property<decimal?>("Part")
                        .HasColumnType("decimal(18,1)");

                    b.Property<string>("Payement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,1)");

                    b.Property<decimal?>("Reste")
                        .HasColumnType("decimal(18,1)");

                    b.Property<decimal?>("TotalEncaissé")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("Total_Encaissé");

                    b.HasKey("TransId");

                    b.ToTable("tbl_trans");
                });

            modelBuilder.Entity("Entities.Models.TblUsage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EffectuéePar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Effectuée_Par");

                    b.Property<string>("Nom")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,1)");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unité")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Usage");
                });

            modelBuilder.Entity("Entities.Models.TblUsageGadget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_usage_gadget");
                });

            modelBuilder.Entity("Entities.Models.TblUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuthComptabilité")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Comptabilité");

                    b.Property<string>("AuthCuisine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Cuisine");

                    b.Property<string>("AuthGestion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Gestion");

                    b.Property<string>("AuthLogistique")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Logistique");

                    b.Property<string>("AuthReservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Reservation");

                    b.Property<string>("AuthStatsDashboard")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Stats_Dashboard");

                    b.Property<string>("AuthStock")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Auth_Stock");

                    b.Property<string>("Contact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Departement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomComplet")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nom_Complet");

                    b.Property<string>("Partenaire")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeCompte")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Type_Compte");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("Entities.Models.TblUsersPartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ajout");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailConfirm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email_Confirm");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdEntité")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Entité");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PicPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Pic_Path");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone2Confirm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Telephone2_Confirm");

                    b.Property<string>("TelephoneConfirm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Telephone_Confirm");

                    b.Property<string>("TypeCompte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type_Compte");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_users_partenaires");
                });

            modelBuilder.Entity("Entities.Models.TblVente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Client")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Détachement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumVente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Vente");

                    b.Property<int?>("Part")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_vente");
                });

            modelBuilder.Entity("Entities.Models.TblVentePartenaire", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuteurPayement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Auteur_Payement");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAction")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Action");

                    b.Property<DateTime?>("DatePayement")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Payement");

                    b.Property<DateTime?>("DateVente")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Vente");

                    b.Property<string>("DeptAuteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_Auteur");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdAuteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Id Auteur");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("Id_Client");

                    b.Property<string>("IdEntité")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Id_Entité");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModePayement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mode Payement");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Nature")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("NumVente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Vente");

                    b.Property<string>("Plateform")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("QUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Q_Unité");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_vente_partenaire");
                });

            modelBuilder.Entity("Entities.Models.TblVentePartenaireTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Client")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DateVente")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Vente");

                    b.Property<string>("DeptAuteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_Auteur");

                    b.Property<string>("Entreprise")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filiale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdAuteur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id Auteur");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("Id_Client");

                    b.Property<string>("IdEntité")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Id_Entité");

                    b.Property<string>("Mesure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Nature")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<string>("Plateform")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_vente_partenaire_temp");
                });

            modelBuilder.Entity("Entities.Models.TblVenteTemp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Catégorie")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Client")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CodeBarre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Code_Barre");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Detachement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NumClient")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Num_Client");

                    b.Property<int?>("Part")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrixUnité")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Prix_Unité");

                    b.Property<string>("Produit")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Quantité")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Taille")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tbl_vente_temp");
                });

            modelBuilder.Entity("Entities.Models.TempReservation", b =>
                {
                    b.Property<int>("Reference")
                        .HasColumnType("int");

                    b.Property<string>("AdresseLivraison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Adresse_Livraison");

                    b.Property<string>("Attribué")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Auteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AuteurId")
                        .HasColumnType("int");

                    b.Property<string>("AuteurReception")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Auteur_Reception");

                    b.Property<string>("AuteurSortie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Auteur_Sortie");

                    b.Property<string>("AutreNumPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Autre_Num_Payement");

                    b.Property<string>("Client")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("ContactLivraison")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Contact_Livraison");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Livraison");

                    b.Property<DateTime?>("DateProduction")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Production");

                    b.Property<DateTime?>("DateSortie")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Sortie");

                    b.Property<string>("DeptAuteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Dept_Auteur");

                    b.Property<string>("DescripInfo")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("Descrip_Info");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("EchecLivr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Echec_Livr");

                    b.Property<string>("FormeGateau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Forme_Gateau");

                    b.Property<string>("Garnissage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gateau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GateauPour")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Gateau_Pour");

                    b.Property<string>("GenreClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Genre_Client");

                    b.Property<string>("HeureLivraison")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Heure_Livraison");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Livraison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Livreur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MentionSurGateau")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Mention_sur_gateau");

                    b.Property<decimal?>("Montant")
                        .HasColumnType("decimal(18,1)");

                    b.Property<decimal?>("Nombre")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Num2Client")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num2_Client");

                    b.Property<string>("NumClient")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Client");

                    b.Property<decimal?>("Part")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Payement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Payée")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("RefPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Payement");

                    b.Property<string>("RefSarali")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ref_Sarali");

                    b.Property<string>("ReservBoutique")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Reserv_Boutique");

                    b.Property<decimal?>("Reste")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("ReçuLogistique")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Reçu_Logistique");

                    b.Property<string>("SortieCuisine")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Sortie_Cuisine");

                    b.Property<string>("TempLivraison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Temp_Livraison");

                    b.Property<int?>("TransId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ValidationPayement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Validation_Payement");

                    b.HasKey("Reference");

                    b.HasIndex(new[] { "AuteurId" }, "IX_temp_Reservation_AuteurId");

                    b.ToTable("temp_Reservation");
                });

            modelBuilder.Entity("Entities.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("tests");
                });

            modelBuilder.Entity("Entities.Models.Gamme", b =>
                {
                    b.HasOne("Entities.Models.Categorie", "Categorie")
                        .WithMany("Gammes")
                        .HasForeignKey("CategorieId");

                    b.HasOne("Entities.Models.Marque", "Marque")
                        .WithMany("Gammes")
                        .HasForeignKey("MarqueId");

                    b.HasOne("Entities.Models.Style", "Style")
                        .WithMany("Gammes")
                        .HasForeignKey("StyleId");

                    b.Navigation("Categorie");

                    b.Navigation("Marque");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("Entities.Models.RefreshToken", b =>
                {
                    b.HasOne("Entities.Models.TblUser", "Auteur")
                        .WithMany("RefreshTokenAuteurs")
                        .HasForeignKey("AuteurId");

                    b.HasOne("Entities.Models.TblUser", "User")
                        .WithMany("RefreshTokenUsers")
                        .HasForeignKey("UserId");

                    b.Navigation("Auteur");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Models.Reservation", b =>
                {
                    b.HasOne("Entities.Models.TblUser", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Models.TblGrosGateau", b =>
                {
                    b.HasOne("Entities.Models.TblUser", "AuteurNavigation")
                        .WithMany("TblGrosGateaus")
                        .HasForeignKey("AuteurId");

                    b.Navigation("AuteurNavigation");
                });

            modelBuilder.Entity("Entities.Models.TblLivraison", b =>
                {
                    b.HasOne("Entities.Models.TblUser", "AuteurNavigation")
                        .WithMany("TblLivraisons")
                        .HasForeignKey("AuteurId");

                    b.Navigation("AuteurNavigation");
                });

            modelBuilder.Entity("Entities.Models.TblPlaningGateau", b =>
                {
                    b.HasOne("Entities.Models.Gamme", "Gamme")
                        .WithMany("TblPlaningGateaus")
                        .HasForeignKey("GammeId");

                    b.HasOne("Entities.Models.Model", "Model")
                        .WithMany("TblPlaningGateaus")
                        .HasForeignKey("ModelId");

                    b.HasOne("Entities.Models.Taille", "Taille")
                        .WithMany("TblPlaningGateaus")
                        .HasForeignKey("TailleId");

                    b.Navigation("Gamme");

                    b.Navigation("Model");

                    b.Navigation("Taille");
                });

            modelBuilder.Entity("Entities.Models.TblTempReserv", b =>
                {
                    b.HasOne("Entities.Models.TblUser", "Auteur")
                        .WithMany("TblTempReservs")
                        .HasForeignKey("AuteurId");

                    b.Navigation("Auteur");
                });

            modelBuilder.Entity("Entities.Models.TempReservation", b =>
                {
                    b.HasOne("Entities.Models.TblUser", "AuteurNavigation")
                        .WithMany("TempReservations")
                        .HasForeignKey("AuteurId");

                    b.Navigation("AuteurNavigation");
                });

            modelBuilder.Entity("Entities.Models.Categorie", b =>
                {
                    b.Navigation("Gammes");
                });

            modelBuilder.Entity("Entities.Models.Gamme", b =>
                {
                    b.Navigation("TblPlaningGateaus");
                });

            modelBuilder.Entity("Entities.Models.Marque", b =>
                {
                    b.Navigation("Gammes");
                });

            modelBuilder.Entity("Entities.Models.Model", b =>
                {
                    b.Navigation("TblPlaningGateaus");
                });

            modelBuilder.Entity("Entities.Models.Style", b =>
                {
                    b.Navigation("Gammes");
                });

            modelBuilder.Entity("Entities.Models.Taille", b =>
                {
                    b.Navigation("TblPlaningGateaus");
                });

            modelBuilder.Entity("Entities.Models.TblUser", b =>
                {
                    b.Navigation("RefreshTokenAuteurs");

                    b.Navigation("RefreshTokenUsers");

                    b.Navigation("Reservations");

                    b.Navigation("TblGrosGateaus");

                    b.Navigation("TblLivraisons");

                    b.Navigation("TblTempReservs");

                    b.Navigation("TempReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
